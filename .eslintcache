[{"/Users/astasanii/development/react-practice/src/index.js":"1","/Users/astasanii/development/react-practice/src/App.js":"2","/Users/astasanii/development/react-practice/src/components/Home/Home.js":"3","/Users/astasanii/development/react-practice/src/components/MainHeader/MainHeader.js":"4","/Users/astasanii/development/react-practice/src/components/Login/Login.js":"5","/Users/astasanii/development/react-practice/src/components/MainHeader/Navigation.js":"6","/Users/astasanii/development/react-practice/src/components/UI/Button/Button.js":"7","/Users/astasanii/development/react-practice/src/components/UI/Card/Card.js":"8","/Users/astasanii/development/react-practice/src/store/auth-context.js":"9","/Users/astasanii/development/react-practice/src/components/UI/Input/Input.js":"10"},{"size":290,"mtime":1639265390060,"results":"11","hashOfConfig":"12"},{"size":503,"mtime":1639265397234,"results":"13","hashOfConfig":"12"},{"size":461,"mtime":1639265206219,"results":"14","hashOfConfig":"12"},{"size":333,"mtime":1639263129093,"results":"15","hashOfConfig":"12"},{"size":3595,"mtime":1639366529001,"results":"16","hashOfConfig":"12"},{"size":665,"mtime":1639263532794,"results":"17","hashOfConfig":"12"},{"size":353,"mtime":1616593928000,"results":"18","hashOfConfig":"12"},{"size":218,"mtime":1616593928000,"results":"19","hashOfConfig":"12"},{"size":1013,"mtime":1639265422842,"results":"20","hashOfConfig":"12"},{"size":580,"mtime":1639365950381,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"knwpb5",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/astasanii/development/react-practice/src/index.js",[],"/Users/astasanii/development/react-practice/src/App.js",[],"/Users/astasanii/development/react-practice/src/components/Home/Home.js",[],"/Users/astasanii/development/react-practice/src/components/MainHeader/MainHeader.js",[],["44","45"],"/Users/astasanii/development/react-practice/src/components/Login/Login.js",["46"],"import React, { useState, useEffect, useReducer, useRef, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') }\n  }\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 }\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 }\n  }\n  return { value: '', isValid: false }\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  })\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  })\n\n  const authCtx = useContext(AuthContext)\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 500);\n\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value })\n\n    // setFormIsValid(\n    //   event.target.value.isValid && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value })\n\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: 'INPUT_BLUR' })\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: 'INPUT_BLUR' })\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n        id=\"email\" \n        label=\"E-Mail\" \n        type=\"email\" \n        isValid={emailIsValid} \n        value={emailState.value} \n        onChange={emailChangeHandler}\n        onBlur={validateEmailHandler}\n        />\n        <Input \n        id=\"password\" \n        label=\"Password\" \n        type=\"password\" \n        isValid={passwordIsValid} \n        value={passwordState.value} \n        onChange={passwordChangeHandler}\n        onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","/Users/astasanii/development/react-practice/src/components/MainHeader/Navigation.js",[],"/Users/astasanii/development/react-practice/src/components/UI/Button/Button.js",[],"/Users/astasanii/development/react-practice/src/components/UI/Card/Card.js",[],"/Users/astasanii/development/react-practice/src/store/auth-context.js",[],"/Users/astasanii/development/react-practice/src/components/UI/Input/Input.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":50,"nodeType":"53","messageId":"54","endLine":1,"endColumn":56},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]